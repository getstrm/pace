syntax = "proto3";

package getstrm.pace.api.data_policies.v1alpha;
import "getstrm/pace/api/entities/v1alpha/entities.proto";
import "google/api/annotations.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/getstrm/pace/protos/data_policies;data_policies";
option java_package = "com.getstrm.pace.api.data_policies.v1alpha";
option java_multiple_files = true;

service DataPoliciesService {
    // Lists all DataPolicies for all platforms.
    rpc ListDataPolicies (ListDataPoliciesRequest) returns (ListDataPoliciesResponse) {
        option (google.api.http) = {
            get: "/data-policies"
        };
    };
    // Creates or updates a DataPolicy in PACE and applies it to the processing platform.
    rpc UpsertDataPolicy (UpsertDataPolicyRequest) returns (UpsertDataPolicyResponse) {
        option (google.api.http) = {
            post: "/data-policies"
            body: "*"
        };
    };
    // Returns the latest policy for a given id and platform.
    rpc GetDataPolicy (GetDataPolicyRequest) returns (GetDataPolicyResponse) {
        option (google.api.http) = {
            get: "/data-policies/{data_policy_id}/{platform_id}"
        };
    };
}

message GetDataPolicyRequest {
    string data_policy_id = 1 [(buf.validate.field).string.min_len = 1];
    string platform_id = 2 [(buf.validate.field).string.min_len = 1];
}

message GetDataPolicyResponse {
    entities.v1alpha.DataPolicy data_policy = 1;
}

message UpsertDataPolicyRequest {
    entities.v1alpha.DataPolicy data_policy = 1;
}

message UpsertDataPolicyResponse {
    entities.v1alpha.DataPolicy data_policy = 1;
}

message ListDataPoliciesRequest {
}

message ListDataPoliciesResponse {
    repeated entities.v1alpha.DataPolicy data_policies = 1;
}
