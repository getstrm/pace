
query ColumnTypesAndTags($tableId: UUID!, $pageSize: Int!, $skip: Int!) {
    columns: assets(
        where: { _and: [
            {type: {publicId: {eq: "Column"}}}
            {outgoingRelations: {typePublicId: "ColumnIsPartOfTable",
                all: {target: {id: {eq: $tableId}}}}}
        ]
        }
        # the main advantage of this query is that offset and limit are not on the nested
        # where statement, so we can loop over the results if needed.
        # also it seeems like we use less nodes on Collibra, and don't trigger the
        # node size limit of 100000 so easily.
        offset: $skip
        limit: $pageSize
    ) {
        displayName
        dataType: stringAttributes(where: {type: {name: {eq: "Technical Data Type"}}}) {
            value: stringValue
        }
        tags { name }
    }
}
