name: Pull Request Build

on:
  push:
    branches-ignore:
      - "main"
      - "alpha"
      - "beta"
    paths-ignore:
      - "docs/**"

jobs:
  pr-build:
    runs-on: ubuntu-latest
    # based on: https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers#running-jobs-directly-on-the-runner-machine
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build
        run: ./gradlew build -PciBuild
      - name: copy app.jar
        run: cp app/build/libs/app.jar integration-test/
      - name: change to integration-test directory
        run: cd integration-test
      - name: install postgresql-client
        run: sudo apt update -y && apt install -y postgresql-client
      - name: setup postgres server
        run: docker-compose up -d
      - name: execute test steps
        run: make all
      - name: tear down
        run: docker-compose down
